#!/bin/bash

# Create Monthly Milestone Script for llm-d
# Usage: ./create-monthly-milestone.sh [version] [month_name]
# Example: ./create-monthly-milestone.sh v0.8 "January"

set -e

# Configuration
DEFAULT_THEME="**Release Theme: TBD** - Theme to be determined"

# Function to get the next version if not provided
get_next_version() {
    # Get the latest milestone version
    LATEST_VERSION=$(gh api repos/:owner/:repo/milestones \
        --jq 'map(select(.title | startswith("v"))) | sort_by(.title) | .[-1].title' 2>/dev/null || echo "v0.0")
    
    # Extract version number and increment
    if [[ $LATEST_VERSION =~ v([0-9]+)\.([0-9]+) ]]; then
        MAJOR=${BASH_REMATCH[1]}
        MINOR=${BASH_REMATCH[2]}
        NEXT_MINOR=$((MINOR + 1))
        echo "v${MAJOR}.${NEXT_MINOR}"
    else
        echo "v0.1"
    fi
}

# Function to calculate next month's 3rd Friday
calculate_due_date() {
    local month_offset=${1:-1}  # Default to next month
    
    # Get target month/year
    TARGET_MONTH=$(date -d "+${month_offset} month" +%Y-%m)
    TARGET_YEAR=$(date -d "+${month_offset} month" +%Y)
    
    # Find 3rd Friday of target month
    # Start with 1st of month, find first Friday, add 14 days
    FIRST_OF_MONTH="${TARGET_YEAR}-${TARGET_MONTH}-01"
    FIRST_FRIDAY=$(date -d "$FIRST_OF_MONTH +$(( (12 - $(date -d "$FIRST_OF_MONTH" +%u)) % 7 )) days")
    THIRD_FRIDAY=$(date -d "$FIRST_FRIDAY +14 days" +%Y-%m-%d)
    
    echo "${THIRD_FRIDAY}T23:59:59Z"
}

# Function to get month name for due date
get_month_name() {
    local due_date=$1
    date -d "$due_date" +%B
}

# Parse command line arguments
VERSION=${1:-$(get_next_version)}
MONTH_NAME=${2:-$(get_month_name "$(calculate_due_date)")}
DUE_DATE=$(calculate_due_date)

# Validate version format
if [[ ! $VERSION =~ ^v[0-9]+\.[0-9]+$ ]]; then
    echo "Error: Version must be in format vX.Y (e.g., v0.8)"
    exit 1
fi

# Check if milestone already exists
EXISTING_MILESTONE=$(gh api repos/:owner/:repo/milestones \
    --jq ".[] | select(.title == \"$VERSION\") | .title" 2>/dev/null || echo "")

if [ ! -z "$EXISTING_MILESTONE" ]; then
    echo "Error: Milestone $VERSION already exists"
    exit 1
fi

# Create the milestone
echo "Creating milestone: $VERSION"
echo "Due date: $DUE_DATE ($MONTH_NAME)"
echo "Theme: $DEFAULT_THEME"

gh api repos/:owner/:repo/milestones \
    --method POST \
    --field title="$VERSION" \
    --field description="$DEFAULT_THEME" \
    --field due_on="$DUE_DATE"

echo "‚úÖ Successfully created milestone: $VERSION"
echo "üóìÔ∏è  Due date: $(date -d "$DUE_DATE" '+%B %d, %Y')"
echo "üìã You can now assign issues to this milestone"
echo "üé® Remember to update the theme description once determined"

# Optional: Create a basic release planning issue
read -p "Create release planning issue for $VERSION? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    PLANNING_ISSUE_BODY="## Goal
Coordinate the $VERSION release process ensuring all core components are released together.

## Release Timeline
- **Week 1**: Planning & Triage
- **Week 2-3**: Development & Integration  
- **Week 4**: Release & Stabilization
- **Due Date**: $(date -d "$DUE_DATE" '+%B %d, %Y')

## Release Lead Responsibilities
- [ ] Review project board 'This Month' column
- [ ] Confirm core stories are ready for development
- [ ] Announce release timeline to team
- [ ] Coordinate with extension component owners
- [ ] Monitor development progress
- [ ] Coordinate integration testing
- [ ] Execute release checklist

## Success Criteria
- [ ] All core components released together as $VERSION.0
- [ ] Extension components coordinate independently
- [ ] Release completed by due date
- [ ] Post-release retrospective conducted

## ‚ö†Ô∏è Generated Issue
This issue was auto-generated by the monthly milestone script."

    gh issue create \
        --title "[PROCESS] $VERSION Release Planning and Coordination" \
        --body "$PLANNING_ISSUE_BODY" \
        --milestone "$VERSION" \
        --label "core-release,type/task,priority/high"
    
    echo "‚úÖ Created release planning issue for $VERSION"
fi